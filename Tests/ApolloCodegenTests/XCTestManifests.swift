#if !canImport(ObjectiveC)
import XCTest

extension ASTParsingTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ASTParsingTests = [
        ("testLoadingStarWarsJSON", testLoadingStarWarsJSON),
        ("testParsingASTTypes", testParsingASTTypes),
        ("testParsingOperationWithMutation", testParsingOperationWithMutation),
        ("testParsingOperationWithQueryAndFragment", testParsingOperationWithQueryAndFragment),
        ("testParsingOperationWithQueryAndInputAndNestedTypes", testParsingOperationWithQueryAndInputAndNestedTypes),
        ("testParsingQueryWithAliasesAndPassedInRawValue", testParsingQueryWithAliasesAndPassedInRawValue),
    ]
}

extension ApolloCodegenTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ApolloCodegenTests = [
        ("testCodegenWithMultipleFilesOutputsMultipleFiles", testCodegenWithMultipleFilesOutputsMultipleFiles),
        ("testCodegenWithSingleFileOutputsSingleFile", testCodegenWithSingleFileOutputsSingleFile),
        ("testCreatingOptionsWithAllParameters", testCreatingOptionsWithAllParameters),
        ("testCreatingOptionsWithDefaultParameters", testCreatingOptionsWithDefaultParameters),
    ]
}

extension ApolloSchemaTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ApolloSchemaTests = [
        ("testCreatingOptionsWithAllParameters", testCreatingOptionsWithAllParameters),
        ("testCreatingOptionsWithDefaultParameters", testCreatingOptionsWithDefaultParameters),
        ("testDownloadingSchemaAsJSON", testDownloadingSchemaAsJSON),
        ("testDownloadingSchemaInSchemaDefinitionLanguage", testDownloadingSchemaInSchemaDefinitionLanguage),
    ]
}

extension CLIDownloaderTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__CLIDownloaderTests = [
        ("testRedownloading", testRedownloading),
        ("testTimeoutThrowsCorrectError", testTimeoutThrowsCorrectError),
    ]
}

extension CLIExtractorTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__CLIExtractorTests = [
        ("testCorrectSHASUMButMissingBinaryReExtractionWorks", testCorrectSHASUMButMissingBinaryReExtractionWorks),
        ("testExtractingZip", testExtractingZip),
        ("testFolderExistsButMissingSHASUMFileReExtractionWorks", testFolderExistsButMissingSHASUMFileReExtractionWorks),
        ("testMissingSHASUMFileButCorrectZipFileCreatesSHASUMFile", testMissingSHASUMFileButCorrectZipFileCreatesSHASUMFile),
        ("testReExtractingZipWithDifferentSHA", testReExtractingZipWithDifferentSHA),
        ("testValidatingSHASUMFailsWithoutMatch", testValidatingSHASUMFailsWithoutMatch),
        ("testValidatingSHASUMWithMatchingWorks", testValidatingSHASUMWithMatchingWorks),
    ]
}

extension CodegenExtensionTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__CodegenExtensionTests = [
        ("testDroppingSuffixThatDoesExist", testDroppingSuffixThatDoesExist),
        ("testDroppingSuffixThatDoesntExist", testDroppingSuffixThatDoesntExist),
        ("testOptionalBoolean", testOptionalBoolean),
    ]
}

extension FileManagerExtensionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FileManagerExtensionsTests = [
        ("testFileDoesNotExistForCLIFolderURL", testFileDoesNotExistForCLIFolderURL),
        ("testFolderDoesNotExistForZipFileURL", testFolderDoesNotExistForZipFileURL),
        ("testFolderExistsForCLIFolderURL", testFolderExistsForCLIFolderURL),
        ("testsFileExistsForZipFileURL", testsFileExistsForZipFileURL),
        ("testSHASUMOfIncludedBinaryMatchesExpected", testSHASUMOfIncludedBinaryMatchesExpected),
    ]
}

extension JSONContainerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__JSONContainerTests = [
        ("testArrayOfDictionaries", testArrayOfDictionaries),
        ("testDictionaryWithNestedArray", testDictionaryWithNestedArray),
        ("testDictionaryWithNestedDictionary", testDictionaryWithNestedDictionary),
        ("testSingleLevelArray", testSingleLevelArray),
        ("testSingleLevelDictionary", testSingleLevelDictionary),
    ]
}

extension VariableToSwiftTypeTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__VariableToSwiftTypeTests = [
        ("testNonNullEnum", testNonNullEnum),
        ("testNonNullInputObject", testNonNullInputObject),
        ("testNonNullInterface", testNonNullInterface),
        ("testNonNullListOfNonNullItems", testNonNullListOfNonNullItems),
        ("testNonNullListOfNullableItems", testNonNullListOfNullableItems),
        ("testNonNullObject", testNonNullObject),
        ("testNonNullScalar", testNonNullScalar),
        ("testNonNullUnion", testNonNullUnion),
        ("testNullableEnum", testNullableEnum),
        ("testNullableInputObject", testNullableInputObject),
        ("testNullableInterface", testNullableInterface),
        ("testNullableListOfNonNullItems", testNullableListOfNonNullItems),
        ("testNullableListOfNullableItems", testNullableListOfNullableItems),
        ("testNullableObject", testNullableObject),
        ("testNullableScalar", testNullableScalar),
        ("testNullableUnion", testNullableUnion),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(ASTParsingTests.__allTests__ASTParsingTests),
        testCase(ApolloCodegenTests.__allTests__ApolloCodegenTests),
        testCase(ApolloSchemaTests.__allTests__ApolloSchemaTests),
        testCase(CLIDownloaderTests.__allTests__CLIDownloaderTests),
        testCase(CLIExtractorTests.__allTests__CLIExtractorTests),
        testCase(CodegenExtensionTests.__allTests__CodegenExtensionTests),
        testCase(FileManagerExtensionsTests.__allTests__FileManagerExtensionsTests),
        testCase(JSONContainerTests.__allTests__JSONContainerTests),
        testCase(VariableToSwiftTypeTests.__allTests__VariableToSwiftTypeTests),
    ]
}
#endif
